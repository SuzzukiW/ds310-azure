{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "xfu-df-1"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ComplaintsClean')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "NHTSA_TXT_Source",
								"type": "DatasetReference"
							},
							"name": "Source"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "NHTSA_SQL_Data",
								"type": "DatasetReference"
							},
							"name": "Sink",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStorageLinkedService",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "DataTransformation"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CMPLID as string,",
						"          ODINO as string,",
						"          MFR_NAME as string,",
						"          MAKETXT as string,",
						"          MODELTXT as string,",
						"          YEARTXT as string,",
						"          CRASH as string,",
						"          FAILDATE as string,",
						"          FIRE as string,",
						"          INJURED as string,",
						"          DEATHS as string,",
						"          COMPDESC as string,",
						"          CITY as string,",
						"          STATE as string,",
						"          VIN as string,",
						"          DATEA as string,",
						"          LDATE as string,",
						"          MILES as string,",
						"          OCCURENCES as string,",
						"          CDESCR as string,",
						"          CMPL_TYPE as string,",
						"          POLICE_RPT_YN as string,",
						"          PURCH_DT as string,",
						"          {ORIG_OWNER _YN} as string,",
						"          ANTI_BRAKES_YN as string,",
						"          CRUISE_CONT_YN as string,",
						"          NUM_CYLS as string,",
						"          DRIVE_TRAIN as string,",
						"          FUEL_SYS as string,",
						"          FUEL_TYPE as string,",
						"          TRANS_TYPE as string,",
						"          VEH_SPEED as string,",
						"          DOT as string,",
						"          TIRE_SIZE as string,",
						"          LOC_OF_TIRE as string,",
						"          {TIRE _FAIL_TYPE} as string,",
						"          ORIG_EQUIP_YN as string,",
						"          MANUF_DT as string,",
						"          SEAT_TYPE as string,",
						"          RESTRAINT_TYPE as string,",
						"          DEALER_NAME as string,",
						"          DEALER_TEL as string,",
						"          {DEALER _CITY} as string,",
						"          DEALER_STATE as string,",
						"          {DEALER _ZIP} as string,",
						"          PROD_TYPE as string,",
						"          REPAIRED_YN as string,",
						"          MEDICAL_ATTN as string,",
						"          VEHICLES_TOWED_YN as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Source",
						"Source derive(DATEA = toDate(DATEA, 'yyyyMMdd')) ~> DataTransformation",
						"DataTransformation sink(allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     input(",
						"          CMPLID as integer,",
						"          ODINO as string,",
						"          MFR_NAME as string,",
						"          MAKETXT as string,",
						"          MODELTXT as string,",
						"          YEARTXT as string,",
						"          CRASH as string,",
						"          FAILDATE as date,",
						"          FIRE as string,",
						"          INJURED as integer,",
						"          DEATHS as integer,",
						"          COMPDESC as string,",
						"          CITY as string,",
						"          STATE as string,",
						"          VIN as string,",
						"          DATEA as date,",
						"          LDATE as date,",
						"          MILES as integer,",
						"          OCCURENCES as integer,",
						"          CDESCR as string,",
						"          CMPL_TYPE as string,",
						"          POLICE_RPT_YN as string,",
						"          PURCH_DT as date,",
						"          ORIG_OWNER_YN as string,",
						"          ANTI_BRAKES_YN as string,",
						"          CRUISE_CONT_YN as string,",
						"          NUM_CYLS as integer,",
						"          DRIVE_TRAIN as string,",
						"          FUEL_SYS as string,",
						"          FUEL_TYPE as string,",
						"          TRANS_TYPE as string,",
						"          VEH_SPEED as integer,",
						"          DOT as string,",
						"          TIRE_SIZE as string,",
						"          LOC_OF_TIRE as string,",
						"          TIRE_FAIL_TYPE as string,",
						"          ORIG_EQUIP_YN as string,",
						"          MANUF_DT as date,",
						"          SEAT_TYPE as string,",
						"          RESTRAINT_TYPE as string,",
						"          DEALER_NAME as string,",
						"          DEALER_TEL as string,",
						"          DEALER_CITY as string,",
						"          DEALER_STATE as string,",
						"          DEALER_ZIP as string,",
						"          PROD_TYPE as string,",
						"          REPAIRED_YN as string,",
						"          MEDICAL_ATTN as string,",
						"          VEHICLES_TOWED_YN as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'allErrors',",
						"     transactionCommit: 'single',",
						"     reportSuccessOnError: false) ~> Sink"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HW6_DF')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "NHTSA_TXT_Source",
								"type": "DatasetReference"
							},
							"name": "NHTSATXT"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Parquet1",
								"type": "DatasetReference"
							},
							"name": "Sink"
						}
					],
					"transformations": [
						{
							"name": "Filter"
						},
						{
							"name": "DerivedColumn"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Column_1 as string,",
						"          Column_2 as string,",
						"          Column_3 as string,",
						"          Column_4 as string,",
						"          Column_5 as string,",
						"          Column_6 as string,",
						"          Column_7 as string,",
						"          Column_8 as string,",
						"          Column_9 as string,",
						"          Column_10 as string,",
						"          Column_11 as string,",
						"          Column_12 as string,",
						"          Column_13 as string,",
						"          Column_14 as string,",
						"          Column_15 as string,",
						"          Column_16 as string,",
						"          Column_17 as string,",
						"          Column_18 as string,",
						"          Column_19 as string,",
						"          Column_20 as string,",
						"          Column_21 as string,",
						"          Column_22 as string,",
						"          Column_23 as string,",
						"          Column_24 as string,",
						"          Column_25 as string,",
						"          Column_26 as string,",
						"          Column_27 as string,",
						"          Column_28 as string,",
						"          Column_29 as string,",
						"          Column_30 as string,",
						"          Column_31 as string,",
						"          Column_32 as string,",
						"          Column_33 as string,",
						"          Column_34 as string,",
						"          Column_35 as string,",
						"          Column_36 as string,",
						"          Column_37 as string,",
						"          Column_38 as string,",
						"          Column_39 as string,",
						"          Column_40 as string,",
						"          Column_41 as string,",
						"          Column_42 as string,",
						"          Column_43 as string,",
						"          Column_44 as string,",
						"          Column_45 as string,",
						"          Column_46 as string,",
						"          Column_47 as string,",
						"          Column_48 as string,",
						"          Column_49 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('hash', 1)) ~> NHTSATXT",
						"NHTSATXT filter(!endsWith(Column_3, '.')) ~> Filter",
						"Filter derive(FileName = concat(Column_3, '.parquet')) ~> DerivedColumn",
						"DerivedColumn sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     rowUrlColumn:'FileName',",
						"     umask: 0222,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Sink"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HW6ToParquet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data Flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "HW6_DF",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"NHTSATXT": {},
									"Sink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/HW6_DF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TXTtoSQLComplaints')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Clean and Put Data into SQL Database",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ComplaintsClean",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Source": {},
									"Sink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 16,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-10-11T05:42:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ComplaintsClean')]"
			]
		}
	]
}